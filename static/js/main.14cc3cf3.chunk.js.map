{"version":3,"sources":["components/AssetsInfo.js","api/data.js","components/CollectionsInfo.js","App.js","serviceWorker.js","index.js"],"names":["AssetsInfo","props","setSortAssets","sortKey","setState","sortAssets","state","sort","a","b","this","selectedAssets","className","length","map","asset","key","id","ID","name","path","collectionId","setMasterId","masterId","React","Component","SortForm","value","handleChange","bind","handleSubmit","event","target","preventDefault","onSubmit","onChange","type","AssetCard","handleClick","e","src","alt","width","height","icon","faThumbtack","size","onClick","collections","masterAssetId","tags","subTag","assets","CollectionsInfo","Promise","resolve","setTimeout","then","data","forEach","collection","setDefaultMasterId","tag","getRecurName","setDataFromCollection","masterIdObj","CollectionCard","updateCollectionIcon","assetId","find","Error","getAssetByIdAsync","masterPath","collectionAssets","filter","getAssetsByCollectionAsync","App","dataFromCollection","T","curMasterId","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"qSAMqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,cAAgB,SAACC,GAUf,EAAKC,SAAS,CAACC,WAAY,EAAKC,MAAMD,WAAWE,MAT/B,SAACC,EAAGC,GACpB,OAAGD,EAAEL,GAAWM,EAAEN,IACF,EACPK,EAAEL,GAAWM,EAAEN,GACT,EAEA,QAbjB,EAAKG,MAAM,CACTD,WAAW,IAHI,E,sEAqBOJ,GACxBS,KAAKN,SAAS,CACZC,WAAYJ,EAAMU,mB,+BAIZ,IAAD,OACP,OACE,6BACE,yBAAKC,UAAU,YAEwB,IAAnCF,KAAKT,MAAMU,eAAeE,OAC1B,kBAAC,EAAD,CACAX,cAAeQ,KAAKR,gBAElB,MAKN,yBAAKU,UAAU,cAEXF,KAAKJ,MAAMD,WAAWS,KAAI,SAAAC,GAAK,OAC7B,kBAAC,EAAD,CACEC,IAAKD,EAAME,GACXC,GAAIH,EAAME,GACVE,KAAMJ,EAAMI,KACZC,KAAI,+DAA0DL,EAAMK,MACpEC,aAAcN,EAAMM,aACpBC,YAAa,EAAKrB,MAAMqB,YACxBC,SAAU,EAAKtB,MAAMsB,oB,GApDGC,IAAMC,WA8DjCC,EAAb,kDACE,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CAAEqB,MAAO,QACtB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,EADrB,yDAQeE,GACXrB,KAAKN,SAAS,CAAEuB,MAAOI,EAAMC,OAAOL,UATxC,mCAYeI,GACXrB,KAAKT,MAAMC,cAAcQ,KAAKJ,MAAMqB,OACpCI,EAAME,mBAdV,+BAoBI,OACE,0BAAMC,SAAUxB,KAAKoB,cACnB,2BAAOlB,UAAU,cAAjB,WAEA,4BAAQA,UAAU,cAAce,MAAOjB,KAAKJ,MAAMqB,MAAOQ,SAAUzB,KAAKkB,cACpE,4BAAQD,MAAM,QAAd,QACA,4BAAQA,MAAM,MAAd,QAGJ,2BAAOS,KAAK,SAAST,MAAM,cA7BnC,GAA8BH,IAAMC,WAmCvBY,EAAb,kDACE,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDqC,YAAc,EAAKA,YAAYT,KAAjB,gBAFF,EADrB,wDAMcU,GACVA,EAAEN,iBACFvB,KAAKT,MAAMqB,YAAYZ,KAAKT,MAAMoB,aAAcX,KAAKT,MAAMiB,MAR/D,+BAaI,OACE,yBAAKN,UAAU,cACb,yBAAK4B,IAAK9B,KAAKT,MAAMmB,KAAMqB,IAAK/B,KAAKT,MAAMkB,KAAMuB,MAAM,MAAMC,OAAO,QACpE,yBAAK/B,UAAU,gBACb,oCAAUF,KAAKT,MAAMkB,MACrB,kCAAQT,KAAKT,MAAMiB,IAEhBR,KAAKT,MAAMiB,KAAOR,KAAKT,MAAMsB,SAC5B,kBAAC,IAAD,CAAiBqB,KAAMC,IAAaC,KAAK,OACvC,4BAAQlC,UAAU,SAASmC,QAASrC,KAAK4B,aAAzC,oBAtBhB,GAA+Bd,IAAMC,WCvG/BuB,EAAc,CAChB,CACI/B,GAAI,EACJE,KAAM,eACN8B,cAAe,GACfC,KAAM,CACF/B,KAAM,UACNgC,OAAQ,CACJhC,KAAM,kBACNgC,OAAQ,CACJhC,KAAM,WAKtB,CACIF,GAAI,EACJE,KAAM,eACN8B,cAAe,GACfC,KAAM,CACF/B,KAAM,kBACNgC,OAAQ,CACJhC,KAAM,UAIlB,CACIF,GAAI,EACJE,KAAM,YACN8B,cAAe,GACfC,KAAM,CACF/B,KAAM,SACNgC,OAAQ,CACJhC,KAAM,QACNgC,OAAQ,CACJhC,KAAM,iBACNgC,OAAQ,CACJhC,KAAM,YAM1B,CACIF,GAAI,EACJE,KAAM,UACN8B,cAAe,GACfC,KAAM,CACF/B,KAAM,QACNgC,OAAQ,CACJhC,KAAM,qBACNgC,OAAQ,CACJhC,KAAM,YAOpBiC,EAAS,CACX,CACInC,GAAI,GACJE,KAAM,gBACNC,KAAM,YACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,eACNC,KAAM,WACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,eACNC,KAAM,WACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,gBACNC,KAAM,YACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,iBACNC,KAAM,aACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,iBACNC,KAAM,aACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,gBACNC,KAAM,oBACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,QACNC,KAAM,YACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,SACNC,KAAM,aACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,WACNC,KAAM,eACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,iBACNC,KAAM,WACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,QACNC,KAAM,YACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,yBACNC,KAAM,UACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,YACNC,KAAM,SACNC,aAAc,GAElB,CACIJ,GAAI,GACJE,KAAM,QACNC,KAAM,YACNC,aAAc,IC5IDgC,E,kDACnB,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACX0C,YAAa,IAHE,E,gEAOE,IAAD,ODyIX,IAAIM,SAAQ,SAACC,GAAD,OAAaC,YAAW,kBAAMD,EAAQP,KAAc,QCxIjDS,MAAK,SAACC,GAC1B,EAAKtD,SAAS,CACZ4C,YAAaU,IAEfA,EAAKC,SAAQ,SAAAC,GACX,EAAK3D,MAAM4D,mBAAmBD,EAAW3C,GAAI2C,EAAWX,uB,mCAKjDa,GACX,MAAG,WAAYA,KAAQ,EACdA,EAAI3C,KAEP,GAAN,OAAU2C,EAAI3C,KAAd,cAAwBT,KAAKqD,aAAaD,EAAIX,W,+BAGtC,IAAD,OACP,OACE,yBAAKvC,UAAU,mBACb,4DACCF,KAAKJ,MAAM0C,YAAYlC,KAAI,SAAA8C,GAAU,OACpC,kBAAC,EAAD,CACE5C,IAAK4C,EAAW3C,GAChBC,GAAI0C,EAAW3C,GACfE,KAAMyC,EAAWzC,KACjB2C,IAAK,EAAKC,aAAaH,EAAWV,MAClCc,sBAAuB,EAAK/D,MAAM+D,sBAClCzC,SAAU,EAAKtB,MAAMgE,YAAYL,EAAW3C,KAAO2C,EAAWX,wB,GArC7BzB,IAAMC,WA6CtCyC,EAAb,kDACE,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAORkE,qBAAuB,SAAC5C,ID8FO,SAAC6C,GAC9B,IAAMrD,EAAQqC,EAAOiB,MAAK,SAAC7D,GAAD,OAAOA,EAAES,KAAOmD,KAE1C,IAAKrD,EACD,MAAM,IAAIuD,MAAM,kBAAoBF,GAGxC,OAAO,IAAId,SAAQ,SAACC,GAAD,OAAaC,YAAW,kBAAMD,EAAQxC,KAAQ,SCpGjEwD,CAAkBhD,GAAUkC,MAAK,SAACC,GAChC,EAAKtD,SAAS,CAAEoE,WAAY,wDAA0Dd,EAAKtC,WAV5E,EAcnBkB,YAAc,SAACC,GACbA,EAAEN,iBDiGoC,SAACZ,GACvC,IAAMoD,EAAmBrB,EAAOsB,QAAO,SAAC3D,GAAD,OAAWA,EAAMM,eAAiBA,KAEzE,OAAO,IAAIiC,SAAQ,SAACC,GAAD,OAAaC,YAAW,kBAAMD,EAAQkB,KAAmB,QClG5EE,CADmB,EAAK1E,MAAMiB,IACWuC,MAAK,SAACC,GAC7C,EAAKzD,MAAM+D,sBAAsBN,OAhBnC,EAAKpD,MAAQ,CACXkE,WAAY,IAEd,EAAKlC,YAAc,EAAKA,YAAYT,KAAjB,gBALF,EADrB,gEAwBInB,KAAKyD,qBAAqBzD,KAAKT,MAAMsB,YAxBzC,gDA0B4BtB,GACxBS,KAAKyD,qBAAqBlE,EAAMsB,YA3BpC,+BA+BI,OACE,6BACE,2BAAKb,KAAKT,MAAM6D,KAChB,yBAAKlD,UAAU,mBACb,yBAAKA,UAAU,iBAAiB4B,IAAK9B,KAAKJ,MAAMkE,WAAY/B,IAAK/B,KAAKT,MAAMkB,KAAM4B,QAASrC,KAAK4B,YAAaI,MAAM,MAAMC,OAAO,QAChI,yBAAK/B,UAAU,qBACb,uBAAGA,UAAU,oBAAoBmC,QAASrC,KAAK4B,aAC5C5B,KAAKT,MAAMkB,aAtC1B,GAAoCK,IAAMC,WChDrBmD,E,kDACnB,WAAY3E,GAAO,IAAD,8BAChB,cAAMA,IAOR+D,sBAAwB,SAACa,GACvB,EAAKzE,SAAS,CACZgD,OAAOyB,KAVO,EAclBvD,YAAc,SAACD,EAAcE,GAC3B,IAAMuD,EAAE,EAAKxE,MAAM2D,YACnBa,EAAEzD,GAAcE,EAChB,EAAKnB,SAAS,CAAC6D,YAAaa,KAf5B,EAAKxE,MAAM,CACT8C,OAAQ,GACRa,YAAY,IAJE,E,qDAqBhB,IAAMc,EAAuC,IAA3BrE,KAAKJ,MAAM8C,OAAOvC,OAAa,EAC/CH,KAAKJ,MAAM2D,YAAYvD,KAAKJ,MAAM8C,OAAO,GAAG/B,cAE9C,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,CAAiBoD,sBAAuBtD,KAAKsD,sBAC3CH,mBAAoBnD,KAAKY,YACzB2C,YAAavD,KAAKJ,MAAM2D,cAG1B,kBAAC,EAAD,CAAYtD,eAAgBD,KAAKJ,MAAM8C,OACrC9B,YAAaZ,KAAKY,YAClBC,SAAUwD,S,GAlCavD,IAAMC,WCOnBuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.14cc3cf3.chunk.js","sourcesContent":["import React from \"react\"\nimport \"../styles.css\"\nimport { faThumbtack } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default class AssetsInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      sortAssets:[]\n    }\n  }\n\n\n  setSortAssets = (sortKey)=>{\n    const compare_fun=(a, b)=>{\n      if(a[sortKey] < b[sortKey]){\n              return -1;\n      }else if(a[sortKey] > b[sortKey]){\n              return 1;\n      }else{\n              return 0;\n      }\n    }\n    this.setState({sortAssets: this.state.sortAssets.sort(compare_fun)})\n  }\n\n  componentWillReceiveProps(props){\n    this.setState({\n      sortAssets: props.selectedAssets\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"sortForm\">\n          {\n            this.props.selectedAssets.length!==0?\n            <SortForm \n            setSortAssets={this.setSortAssets}\n            /> \n            : null\n          }\n          \n        </div>\n        \n        <div className=\"assetsInfo\">\n          {\n            this.state.sortAssets.map(asset =>\n              <AssetCard\n                key={asset.id}\n                ID={asset.id}\n                name={asset.name}\n                path={`https://jing-chu.github.io/jr-assessment-jing/images/${asset.path}`}\n                collectionId={asset.collectionId}\n                setMasterId={this.props.setMasterId}\n                masterId={this.props.masterId}\n                \n              />)\n         }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class SortForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 'name' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    this.props.setSortAssets(this.state.value)\n    event.preventDefault();\n  }\n\n  render() {\n   \n    \n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className=\"sort-label\">\n          Sort by:\n        <select className=\"sort-select\" value={this.state.value} onChange={this.handleChange}>\n            <option value=\"name\">Name</option>\n            <option value=\"id\">Id</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Sort\" />\n      </form>\n    );\n  }\n}\n\nexport class AssetCard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(e) {\n    e.preventDefault()\n    this.props.setMasterId(this.props.collectionId, this.props.ID)\n  }\n\n\n  render() {\n    return (\n      <div className=\"asset-card\">\n        <img src={this.props.path} alt={this.props.name} width=\"150\" height=\"150\" />\n        <div className=\"asset-detail\">\n          <p>Name: {this.props.name}</p>\n          <p>ID: {this.props.ID}</p>\n          {\n            (this.props.ID === this.props.masterId) ?\n              <FontAwesomeIcon icon={faThumbtack} size=\"2x\" />\n              : <button className=\"master\" onClick={this.handleClick}>\n                Set Master\n                </button>\n          }\n        </div>\n      </div>\n\n    )\n  }\n}","const collections = [\n    {\n        id: 1,\n        name: \"The Simpsons\",\n        masterAssetId: 13,\n        tags: {\n            name: \"Cartoon\",\n            subTag: {\n                name: \"Simpsons family\",\n                subTag: {\n                    name: \"2014\",\n                },\n            },\n        },\n    },\n    {\n        id: 2,\n        name: \"Super heroes\",\n        masterAssetId: 24,\n        tags: {\n            name: \"DC Super heroes\",\n            subTag: {\n                name: \"2014\",\n            },\n        },\n    },\n    {\n        id: 3,\n        name: \"Toy story\",\n        masterAssetId: 31,\n        tags: {\n            name: \"Disney\",\n            subTag: {\n                name: \"Pixar\",\n                subTag: {\n                    name: \"Original movie\",\n                    subTag: {\n                        name: \"2010\",\n                    },\n                },\n            },\n        },\n    },\n    {\n        id: 4,\n        name: \"Ninjago\",\n        masterAssetId: 42,\n        tags: {\n            name: \"Ninja\",\n            subTag: {\n                name: \"Secret Ninja Force\",\n                subTag: {\n                    name: \"2017\",\n                },\n            },\n        },\n    },\n];\n\nconst assets = [\n    {\n        id: 11,\n        name: \"Homer Simpson\",\n        path: \"Homer.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 12,\n        name: \"Lisa Simpson\",\n        path: \"Lisa.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 13,\n        name: \"Bart Simpson\",\n        path: \"Bart.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 14,\n        name: \"Marge Simpson\",\n        path: \"Marge.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 15,\n        name: \"Grampa Simpson\",\n        path: \"Grampa.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 16,\n        name: \"Maggie Simpson\",\n        path: \"Maggie.jpg\",\n        collectionId: 1,\n    },\n    {\n        id: 21,\n        name: \"Green Lantern\",\n        path: \"Green lantern.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 22,\n        name: \"Flash\",\n        path: \"Flash.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 23,\n        name: \"Batman\",\n        path: \"Batman.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 24,\n        name: \"Superman\",\n        path: \"Superman.jpg\",\n        collectionId: 2,\n    },\n    {\n        id: 31,\n        name: \"Buzz Lightyear\",\n        path: \"Buzz.jpg\",\n        collectionId: 3,\n    },\n    {\n        id: 32,\n        name: \"Alien\",\n        path: \"Alien.jpg\",\n        collectionId: 3,\n    },\n    {\n        id: 41,\n        name: \"Spinjitzu training Nya\",\n        path: \"Nya.jpg\",\n        collectionId: 4,\n    },\n    {\n        id: 42,\n        name: \"Master Wu\",\n        path: \"Wu.jpg\",\n        collectionId: 4,\n    },\n    {\n        id: 43,\n        name: \"Lloyd\",\n        path: \"Lloyd.jpg\",\n        collectionId: 4,\n    },\n];\n\nexport const getCollectionsAsync = () => {\n    return new Promise((resolve) => setTimeout(() => resolve(collections), 1000));\n};\n\nexport const getAssetByIdAsync = (assetId) => {\n    const asset = assets.find((a) => a.id === assetId);\n\n    if (!asset) {\n        throw new Error(\"Asset not found\" + assetId);\n    }\n\n    return new Promise((resolve) => setTimeout(() => resolve(asset), 500));\n};\n\nexport const getAssetsByCollectionAsync = (collectionId) => {\n    const collectionAssets = assets.filter((asset) => asset.collectionId === collectionId);\n\n    return new Promise((resolve) => setTimeout(() => resolve(collectionAssets), 1000));\n};","import React from \"react\"\nimport \"../styles.css\"\nimport { getCollectionsAsync } from \"../api/data.js\"\nimport { getAssetsByCollectionAsync } from \"../api/data.js\"\nimport { getAssetByIdAsync } from \"../api/data.js\"\nimport { faJoint } from \"@fortawesome/free-solid-svg-icons\"\n\n\nexport default class CollectionsInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collections: []\n    }\n  }\n\n  componentDidMount() {\n    getCollectionsAsync().then((data) => {\n      this.setState({\n        collections: data\n      })\n      data.forEach(collection => {\n        this.props.setDefaultMasterId(collection.id, collection.masterAssetId)\n      })\n    })\n  }\n\n  getRecurName(tag){\n    if('subTag' in tag === false){\n      return tag.name\n    }\n    return `${tag.name} > ${this.getRecurName(tag.subTag)}`\n  }\n\n  render() {\n    return (\n      <div className=\"collectionsInfo\">\n        <h1>Please select one collection</h1>\n        {this.state.collections.map(collection =>\n          <CollectionCard\n            key={collection.id}\n            ID={collection.id}\n            name={collection.name}\n            tag={this.getRecurName(collection.tags)}\n            setDataFromCollection={this.props.setDataFromCollection}\n            masterId={this.props.masterIdObj[collection.id] || collection.masterAssetId}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport class CollectionCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      masterPath: \"\"\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  updateCollectionIcon = (masterId) => {\n    getAssetByIdAsync(masterId).then((data) => {\n      this.setState({ masterPath: \"https://jing-chu.github.io/jr-assessment-jing/images/\" + data.path })\n    })\n  }\n\n  handleClick = (e) => {\n    e.preventDefault()\n    let collectionId = this.props.ID\n    getAssetsByCollectionAsync(collectionId).then((data) => {\n      this.props.setDataFromCollection(data)\n    })\n  }\n\n  componentDidMount() {\n    this.updateCollectionIcon(this.props.masterId)\n  }\n  componentWillReceiveProps(props) {\n    this.updateCollectionIcon(props.masterId)\n  }\n\n  render() {\n    return (\n      <div>\n        <p >{this.props.tag}</p>\n        <div className=\"collection-card\">\n          <img className=\"collection-img\" src={this.state.masterPath} alt={this.props.name} onClick={this.handleClick} width=\"150\" height=\"150\" />\n          <div className=\"collection-detail\">\n            <p className=\"collection-select\" onClick={this.handleClick}>\n              {this.props.name}\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from \"react\"\nimport AssetsInfo from './components/AssetsInfo'\nimport CollectionsInfo from './components/CollectionsInfo'\nimport \"./styles.css\"\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      assets: [],\n      masterIdObj:{},  \n    }\n}\n\n  setDataFromCollection = (dataFromCollection)=>{\n    this.setState({\n      assets:dataFromCollection\n    })\n  }\n\n  setMasterId = (collectionId, masterId)=> {\n    const T=this.state.masterIdObj\n    T[collectionId]=masterId\n    this.setState({masterIdObj: T})\n  }\n\n  render(){\n    const curMasterId=this.state.assets.length===0 ? 0 : \n      this.state.masterIdObj[this.state.assets[0].collectionId]  \n\n    return(\n      <div className=\"app\">\n        <CollectionsInfo setDataFromCollection={this.setDataFromCollection}\n          setDefaultMasterId={this.setMasterId}\n          masterIdObj={this.state.masterIdObj}     \n          />\n   \n        <AssetsInfo selectedAssets={this.state.assets}\n          setMasterId={this.setMasterId}\n          masterId={curMasterId}\n          />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}